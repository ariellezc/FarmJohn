--
-- File generated with SQLiteStudio v3.2.1 on Tue Dec 18 13:44:39 2018
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: Object_Location_Table
DROP TABLE IF EXISTS Object_Location_Table;

CREATE TABLE Object_Location_Table (
    Coordinates_XY STRING  PRIMARY KEY,
    Object_Type    CHAR    REFERENCES Objects (Object_Type),
    TimeGrown      INTEGER
);

INSERT INTO Object_Location_Table (Coordinates_XY, Object_Type, TimeGrown) VALUES ('A1', 'R', 10);

-- Table: Objects
DROP TABLE IF EXISTS Objects;

CREATE TABLE Objects (
    Object_Type                    CHAR,
    ObjectName                     STRING,
    ObjectGrowth                   INTEGER,
    ObjectCost                     INTEGER,
    ObjectSellPrice                INTEGER,
    ObjectHarvestable              INTEGER,
    ObjectHarvestableMultipleTimes INTEGER,
    PRIMARY KEY (
        Object_Type
    )
);

INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('R', 'Rock', 0, 0, 1, 0, 0);
INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('T', 'Tree', 0, 0, 5, 0, 0);
INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('E', 'Empty', 0, 0, 0, 0, 0);
INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('W', 'Water', 0, 0, 0, 0, 0);
INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('C', 'Carrots', 5, 10, 15, 1, 0);
INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('@', 'Cabbage', 10, 20, 40, 1, 0);
INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('P', 'Potatoe', 15, 15, 10, 1, 1);
INSERT INTO Objects (Object_Type, ObjectName, ObjectGrowth, ObjectCost, ObjectSellPrice, ObjectHarvestable, ObjectHarvestableMultipleTimes) VALUES ('G', 'Gooseberries', 8, 50, 5, 1, 1);

-- Table: SaveGame
DROP TABLE IF EXISTS SaveGame;

CREATE TABLE SaveGame (
    PlayerName       STRING  PRIMARY KEY,
    PlayerTimePlayed INTEGER,
    PlayerBalance    INTEGER DEFAULT (0),
    Coordinate_XY    STRING  REFERENCES Object_Location_Table (Coordinates_XY) 
);

INSERT INTO SaveGame (PlayerName, PlayerTimePlayed, PlayerBalance, Coordinate_XY) VALUES ('Bob', 0, 0, 'A1');

-- Table: ShopInventory
DROP TABLE IF EXISTS ShopInventory;

CREATE TABLE ShopInventory (
    ItemName           STRING  PRIMARY KEY,
    ItemCost           INTEGER,
    NumOfItemAvailable INTEGER
);

INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Carrots', 10, 500);
INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Cabbage', 30, 500);
INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Potatoes', 20, 500);
INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Gooseberries', 120, 50);
INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Blackberries', 110, 50);
INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Strawberries', 100, 50);
INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Apple Tree', 200, 10);
INSERT INTO ShopInventory (ItemName, ItemCost, NumOfItemAvailable) VALUES ('Scarecrow', 250, 5);

-- Table: UserInventory
DROP TABLE IF EXISTS UserInventory;

CREATE TABLE UserInventory (
    PlayerName     STRING  REFERENCES SaveGame (PlayerName),
    ItemName       STRING  REFERENCES ShopInventory (ItemName),
    NumInInventory INTEGER
);

INSERT INTO UserInventory (PlayerName, ItemName, NumInInventory) VALUES ('Bob', 'Carrots', 5);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
